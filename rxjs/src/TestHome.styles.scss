.container {
	& > * {
		margin-bottom: 20px;
	}
}

@mixin filledAnimation {
	transform: scale(0.5) translateY(-230%);
}

@mixin outlinedAnimation {
	top: 0;
	background-color: white;
	padding-inline: 4px;
}

@function getColor($default, $color) {
	@if $color {
		@return $color;
	}

	@return $default;
}

$customColor: null;

.input-container {
	display: inline-block;
	position: relative;
	height: 50px;

	&--disabled {
		opacity: 0.5;
	}
	&--success {
		$color: #4caf50;
	}
	&--error {
		opacity: 0.5;
	}

	// LABEL ANIMATIONS
	&:focus-within > .input-box > label {
		color: #1976d2;
	}
	&:focus-within > .input-box--outlined > label {
		@include outlinedAnimation;
	}
	& > .input-box--outlined > input:not(:placeholder-shown) + label {
		@include outlinedAnimation;
	}
	&:focus-within > .input-box--filled > label {
		@include filledAnimation;
	}
	& > .input-box--filled > input:not(:placeholder-shown) + label {
		@include filledAnimation;
	}
	// width causes it to grow by 100%, but trasnlateX causes it to also go to left.
	&:focus-within > .input-box--filled::after {
		width: 100%;
	}

	& > .input-box {
		&--outlined {
			border: 1px solid getColor(rgba(0, 0, 0, 0.23), $customColor);
			border-radius: 4px;
		}
		&--filled {
			background-color: rgba(0, 0, 0, 0.06);
			border-radius: 4px;
			border-bottom: 1px solid getColor(rgba(0, 0, 0, 0.87), $customColor);
			border-bottom-left-radius: revert;
			border-bottom-right-radius: revert;

			&::after {
				width: 0;
				background-color: #1976d2;
				content: '';
				position: absolute;
				left: 50%;
				top: 90%;
				height: 2px;
				transition: width 2s linear;
				transform: translateX(-50%);
			}
		}
		&:hover:not(& > input:disabled) {
			border-color: rgba(0, 0, 0, 0.87);
		}
		&--outlined:focus-within {
			border-color: #1976d2;
			border-width: 2px;
		}

		& > input {
			all: unset;
			padding: 10px;
		}

		& > label {
			position: absolute;
			top: 50%;
			left: 10px;
			transform: translateY(-50%);
			z-index: 2;
		}
		&--outlined > label {
			transition: top linear 0.2s;
			&.label--alwaysAnimated {
				@include outlinedAnimation;
			}
		}
		&--filled > label {
			transition: transform linear 0.2s;
			&.label--alwaysAnimated {
				@include filledAnimation();
			}
		}

		&--success {
		}
		&--disabled {
			& * {
				pointer-events: none;
			}
		}
		&--error {
		}
	}

	&__helper-text {
		position: relative;
		left: 10px;
	}
}

.slider {
	width: 200px;
	height: 100px;
	position: relative;

	&__rail {
		position: absolute;
		display: inline-block;
		width: 100%;
		height: 2px;
		background-color: lightblue;
		border-radius: 50%;
		top: 50%;
		transform: translateY(-50%);
	}

	&__active-rail {
		display: inline-block;
		position: absolute;
		left: 0px;
		top: 50%;
		transform: translateY(-50%);
		height: 3px;
		background-color: blue;
		border-radius: 50%;
		width: 40px;
	}

	&__mark {
		position: absolute;
		right: 0;
		background-color: blue;
		border-radius: 50%;
		width: 10px;
		height: 10px;
		transform: translateY(-30%);
		z-index: 1;

		&:hover {
		}
	}

	&__label {
		position: absolute;
		right: 0;
		width: fit-content;
		background-color: gray;
		transform-origin: left;
		transform: translateY(-150%) translateX(50%);

		&::after {
			content: "";
			border-top: grey 5px solid;
			border-left: 2px solid transparent;
			border-right: 2px solid transparent;
			position: absolute;
			top: 100%;
			left: 50%;
			width: 0px;
			height: 0px;
			transform: translateX(-50%);
		}
	}
}
